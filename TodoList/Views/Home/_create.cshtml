@model TodoList.Models.TodoItem

<li class="list-group-item">
	@using (Ajax.BeginForm(new AjaxOptions()
	{
		UpdateTargetId = "addItem",
		HttpMethod = "POST",
		InsertionMode = InsertionMode.InsertBefore
	}))
	{
		@Html.AntiForgeryToken()
		<h4>New Todo Item</h4>
			<div class="form-horizontal">
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group">
					@Html.LabelFor(model => model.Task, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Task, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Task, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.DateCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.DateCompleted, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.DateCompleted, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Category.Id, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Category.Id, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Add Todo Item" class="btn btn-default" />
					</div>
				</div>
			</div>
		}
</li>
